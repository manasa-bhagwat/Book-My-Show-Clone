services:
  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=rouk"
    volumes:
      - "./volumes/zookeeper/data:/var/lib/zookeeper/data"
      - "./volumes/zookeeper/log:/var/lib/zookeeper/log"

  # Kafka Broker 1
  kafka-broker-1:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,LOCAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_COMPRESSION_TYPE: producer
    volumes:
      - "./volumes/kafka/broker-1:/var/lib/kafka/data"

  # Kafka Broker 2
  kafka-broker-2:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-broker-2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_COMPRESSION_TYPE: producer
    volumes:
      - "./volumes/kafka/broker-2:/var/lib/kafka/data"

  # Kafka Broker 3
  kafka-broker-3:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-broker-3
    depends_on:
      - zookeeper
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,LOCAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_COMPRESSION_TYPE: producer
    volumes:
      - "./volumes/kafka/broker-3:/var/lib/kafka/data"

  # Schema Registry Service
  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker-1:9092,PLAINTEXT://kafka-broker-2:9092,PLAINTEXT://kafka-broker-3:9092"
      SCHEMA_REGISTRY_DEBUG: "true"

  # Kafka Manager UI
  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    hostname: kafka-manager
    depends_on:
      - zookeeper
    ports:
      - "9095:9000"  # Changed from 9000 to 9095 to avoid port conflict
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"

  # Kafka Initialization Service (Creates Topics)
  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafka-broker-1
    entrypoint: [ "/bin/bash", "-c" ]
    command: >
      echo "Waiting for Kafka to be ready..." && 
      until kafka-topics --bootstrap-server kafka-broker-1:9092 --list &>/dev/null; do
        echo "Kafka is not available yet. Retrying in 5 seconds..."
        sleep 5
      done &&
      echo "Deleting previous Kafka topics..." &&
      kafka-topics --delete --bootstrap-server kafka-broker-1:9092 --topic payment-request || true &&
      kafka-topics --delete --bootstrap-server kafka-broker-1:9092 --topic payment-response || true &&
      echo "Creating Kafka topics..." &&
      kafka-topics --create --bootstrap-server kafka-broker-1:9092 --replication-factor 1 --partitions 3 --topic payment-request &&
      kafka-topics --create --bootstrap-server kafka-broker-1:9092 --replication-factor 1 --partitions 3 --topic payment-response &&
      echo "Successfully created topics:" &&
      kafka-topics --list --bootstrap-server kafka-broker-1:9092
