version: "3.8"

services:
  eureka-service:
    image: openjdk:17
    container_name: eureka-service
    build: ./eureka-service-registry
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - app-network

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build: ./api-gateway
    depends_on:
      eureka-service:
        condition: service_healthy
      booking-service:
        condition: service_started
      payment-service:
        condition: service_started
    ports:
      - "8765:8765"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_APPLICATION_NAME: api-gateway
    networks:
      - app-network

  bookingdb:
    image: postgres:15
    container_name: bookingdb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "bookings"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: bookings
    networks:
      - app-network

  paymentdb:
    image: postgres:15
    container_name: paymentdb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "payments"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: payments
    networks:
      - app-network

  booking-service:
    image: booking-service
    container_name: booking-service
    build: ./booking-service
    depends_on:
      eureka-service:
        condition: service_healthy
      bookingdb:
        condition: service_healthy
    ports:
      - "9090:9090"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://bookingdb:5432/bookings
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_APPLICATION_NAME: booking-service
    networks:
      - app-network

  payment-service:
    image: payment-service
    container_name: payment-service
    build: ./payment-service
    depends_on:
      eureka-service:
        condition: service_healthy
      paymentdb:
        condition: service_healthy
    ports:
      - "9091:9091"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://paymentdb:5432/payments
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka/
      SPRING_APPLICATION_NAME: payment-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
